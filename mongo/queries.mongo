use tp0;

// 1
// Obtener el telefono y el numero de cliente del cliente con nombre "Wanda" y apellido "Baker".
db.clients.aggregate([
    {
        // "WHERE"
        $match: {
            nombre: "Wanda",
            apellido: "Baker"
        }
    },
    {
        // "JOIN"
        $lookup: {
            from: "telefono",
            localField: "nro_cliente",
            foreignField: "nro_cliente",
            as: "telefono"
        }
    },
    {
        // Para que se armen 2 tuplas (1 por cada telefono)
        $unwind: "$telefono"
    },
    {
        // "SELECT"
        $project: {
            _id: 0,
            nro_telefono: "$telefono.nro_telefono",
            nro_cliente: 1
        }
    }
    ]
);

//2
//Seleccionar todos los clientes que tengan registrada al menos una factura
db.clients.aggregate([
   {
      $lookup:
         {
           from: "factura",
           localField: "nro_cliente",
           foreignField: "nro_cliente",
           as: "factura"
         }
   },
   {
      $match: {
         factura: { $exists: true, $ne: [] }
      }
   },
   {
      $project: {
         _id: 0,
         nro_cliente: 1,
         nombre: 1,
         apellido: 1
      }
   }
]);


//3
//Seleccionar todos los clientes que no tengan registrada una factura
db.clients.aggregate([
   {
      $lookup:
         {
           from: "factura",
           localField: "nro_cliente",
           foreignField: "nro_cliente",
           as: "factura"
         }
   },
   {
      $match: {
         $or: [
            { factura: { $exists: false } },
            { factura: { $eq: [] } }
         ]
      }
   },
   {
      $project: {
         _id: 0,
         nro_cliente: 1,
         nombre: 1,
         apellido: 1
      }
   }
]);

//4
//Seleccionar los productos que han sido facturados al menos 1 vez.
db.detalle_factura.aggregate([
   {
      $group: {
         _id: "$codigo_producto",
         total_facturado: { $sum: 1 }
      }
   },
   {
      $match: {
         total_facturado: { $gte: 1 }
      }
   },
   {
      $lookup:
         {
           from: "producto",
           localField: "_id",
           foreignField: "codigo_producto",
           as: "productos_facturados"
         }
   },
   {
      $unwind: "$productos_facturados"
   },
   {
      $project: {
         _id: 0,
         codigo_producto: "$productos_facturados.codigo_producto",
         marca: "$productos_facturados.marca",
         nombre: "$productos_facturados.nombre"
      }
   }
])


//5
//Seleccionar los datos de los clientes junto con sus teléfonos
db.clients.aggregate([
   {
      $lookup:
         {
           from: "telefono",
           localField: "nro_cliente",
           foreignField: "nro_cliente",
           as: "telefono"
         }
   },
   {
      $project: {
         _id: 0,
         nro_cliente: 1,
         nombre: 1,
         apellido: 1,
         direccion: 1,
         activo: 1,
         "telefono.codigo_area": 1,
         "telefono.nro_telefono": 1,
         "telefono.tipo": 1
      }
   }
])


//6
//Devolver todos los clientes, con la cantidad de facturas que tienen registradas (admitir nulos en valores de Clientes)
db.clients.aggregate([
    {
        $lookup:{
            from:"factura",
            localField:"nro_cliente",
            foreignField:"nro_cliente",
            as:"factura"
        }
    },
    {
        $project: {
         _id: 0,
         nro_cliente: 1,
         nombre: 1,
         apellido: 1,
         cantidad_facturas: {$size: "$factura"}
      }
    }
])

//7
//Listar todas las Facturas que hayan sido compradas por el cliente de nombre "Pandora" y apellido "Tate"
//TODO revisar esta
db.factura.aggregate([
    {
        $lookup: {
            from: "clients",
            localField: "nro_cliente",
            foreignField: "nro_cliente",
            as: "clients"
        }
     },
     {
        $match: {
            "clients.nombre": "Pandora",
            "clients.apellido": "Tate"
        }
     },
     {
        $project: {
            _id: 0,
            nro_factura: 1,
            fecha: 1,
            total_sin_iva: 1,
            iva: 1,
            total_con_iva: 1,
            nro_cliente: 1
        }
     }
])

//8
//Listar todas las Facturas que contengan productos de la marca “In Faucibus Inc."
db.factura.aggregate([
    {
        $lookup: {
            from: "detalle_factura",
            localField: "nro_factura",
            foreignField: "nro_factura",
            as: "detalle_factura"
        }
    },
    {
        $lookup: {
           from: "producto",
           localField: "detalle_factura.codigo_producto",
           foreignField: "codigo_producto",
           as: "productos"
        }
    },
    {
        $match: {
            "productos.marca": "In Faucibus Inc."
        }
    },
    {
        $project: {
            _id: 0,
            nro_factura: 1,
            fecha: 1,
            total_sin_iva: 1,
            iva: 1,
            total_con_iva: 1,
            nro_cliente: 1
        }
    }
])

//9
//Mostrar cada teléfono junto con los datos del cliente.
db.telefono.aggregate([
    {
        $lookup: {
            from: "clients",
            localField: "nro_cliente",
            foreignField: "nro_cliente",
            as: "client"
        }
    },
    {
        $unwind: "$client"
    },
    {
        $project:{
            _id: 0,
            codigo_area: 1,
            nro_telefono: 1,
            tipo: 1,
            "client.nro_cliente": 1,
            "client.nombre": 1,
            "client.apellido": 1,
            "client.direccion": 1,
            "client.activo": 1
        }
    }
])

//10
//Mostrar nombre y apellido de cada cliente junto con lo que gastó en total (con IVAincluido)
db.clients.aggregate([
   {
      $lookup:
         {
           from: "factura",
           localField: "nro_cliente",
           foreignField: "nro_cliente",
           as: "factura"
         }
   },
   {
      $unwind: {
          "path": "$factura",
          "preserveNullAndEmptyArrays": true
      }
   },
   {
      $group: {
         _id: {
            nro_cliente: "$nro_cliente",
            nombre: "$nombre",
            apellido: "$apellido"
         },
         total_gastado: { $sum: "$factura.total_con_iva" }
      }
   },
   {
      $project: {
         _id: 0,
         nombre: "$_id.nombre",
         apellido: "$_id.apellido",
         total_gastado: 1
      }
   }
])
